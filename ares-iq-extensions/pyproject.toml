[build-system]
requires = ["scikit-build-core>=0.11", "pybind11>=3.0", "mako", "numpy<2.0"]
build-backend = "scikit_build_core.build"

[project]
name = "ares-iq-extensions"
version = "0.0.0"
description = "C++ extension libraries for ares-iq"
readme = "README.md"
authors = [
    { name = "Tom Schmitz", email = "tschmitz@andrew.cmu.edu" },
]
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "numpy",
]

[dependency-groups]
test = ["pytest"]
dev = [{ include-group = "test" }]

[tool.scikit-build]
minimum-version = "build-system.requires"

[tool.pytest.ini_options]
minversion = "8.0"
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
log_cli_level = "INFO"
filterwarnings = [
    "error",
    "ignore::pytest.PytestCacheWarning",
]
testpaths = ["tests"]

[tool.ruff.lint]
extend-select = [
    "B",           # flake8-bugbear
    "I",           # isort
    "ARG",         # flake8-unused-arguments
    "C4",          # flake8-comprehensions
    "EM",          # flake8-errmsg
    "ICN",         # flake8-import-conventions
    "G",           # flake8-logging-format
    "PGH",         # pygrep-hooks
    "PIE",         # flake8-pie
    "PL",          # pylint
    "PT",          # flake8-pytest-style
    "PTH",         # flake8-use-pathlib
    "RET",         # flake8-return
    "RUF",         # Ruff-specific
    "SIM",         # flake8-simplify
    "T20",         # flake8-print
    "UP",          # pyupgrade
    "YTT",         # flake8-2020
    "EXE",         # flake8-executable
    "NPY",         # NumPy specific rules
    "PD",          # pandas-vet
]
ignore = [
    "PLR09",    # Too many X
    "PLR2004",  # Magic comparison
]
isort.required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["T20"]
